#!/bin/sh

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/root
PASSPHRASE=passphrase

cd /root

if [ "$1" = "genesis" ]; then
  if [ ! -f "/root/.nymd/config/genesis.json" ]; then
    ./nymd init nymnet --chain-id nymnet 2> /dev/null
    # staking/governance token is hardcoded in config, change this
    sed -i "s/\"stake\"/\"u${STAKE_DENOM}\"/" /root/.nymd/config/genesis.json
    sed -i 's/minimum-gas-prices = ""/minimum-gas-prices = "0.025u'"${DENOM}"'"/' /root/.nymd/config/app.toml
    sed -i '0,/enable = false/s//enable = true/g' /root/.nymd/config/app.toml
    sed -i 's/cors_allowed_origins = \[\]/cors_allowed_origins = \["*"\]/' /root/.nymd/config/config.toml
    sed -i 's/create_empty_blocks = true/create_empty_blocks = false/' /root/.nymd/config/config.toml
    sed -i 's/laddr = "tcp:\/\/127.0.0.1:26657"/laddr = "tcp:\/\/0.0.0.0:26657"/' /root/.nymd/config/config.toml

#    create accounts
    yes "${PASSPHRASE}" | ./nymd keys add node_admin 2>&1 >/dev/null | tail -n 1 > /root/.nymd/mnemonic
    yes "${PASSPHRASE}" | ./nymd keys add secondary 2>&1 >/dev/null | tail -n 1 > /root/.nymd/secondary_mnemonic
    cp /root/.nymd/mnemonic /genesis_volume/genesis_mnemonic
    cp /root/.nymd/secondary_mnemonic /genesis_volume/secondary_mnemonic

#    add genesis accounts with some initial tokens
    GENESIS_ADDRESS=$(yes "${PASSPHRASE}" | ./nymd keys show node_admin -a)
    SECONDARY_ADDRESS=$(yes "${PASSPHRASE}" | ./nymd keys show secondary -a)
    yes "${PASSPHRASE}" | ./nymd add-genesis-account "${GENESIS_ADDRESS}" 1000000000000000u"${DENOM}",1000000000000000u"${STAKE_DENOM}"
    yes "${PASSPHRASE}" | ./nymd add-genesis-account "${SECONDARY_ADDRESS}" 1000000000000000u"${DENOM}",1000000000000000u"${STAKE_DENOM}"

    yes "${PASSPHRASE}" | ./nymd gentx node_admin 1000000000u"${STAKE_DENOM}" --chain-id nymnet 2> /dev/null
    ./nymd collect-gentxs 2> /dev/null
    ./nymd validate-genesis > /dev/null
    cp /root/.nymd/config/genesis.json /genesis_volume/genesis.json
  else
    echo "Validator already initialized, starting with the existing configuration."
    echo "If you want to re-init the validator, destroy the existing container"
	fi
	./nymd start
elif [ "$1" = "secondary" ]; then
  if [ ! -f "/root/.nymd/config/genesis.json" ]; then
    ./nymd init nymnet --chain-id nym-secondary 2> /dev/null

    # Wait until the genesis node writes the genesis.json to the shared volume
    while ! [ -s /genesis_volume/genesis.json ]; do
      sleep 1
    done

# wait for the actual validator to start up
    sleep 5

    cp /genesis_volume/genesis.json /root/.nymd/config/genesis.json
    GENESIS_PEER=$(cat /root/.nymd/config/genesis.json | grep '"memo"' | cut -d'"' -f 4)
    GENESIS_IP=$(cat /root/.nymd/config/genesis.json | grep '"memo"' | cut -d'@' -f2 | cut -d: -f1)
    sed -i 's/persistent_peers = ""/persistent_peers = "'"${GENESIS_PEER}"'"/' /root/.nymd/config/config.toml
    sed -i 's/minimum-gas-prices = ""/minimum-gas-prices = "0.025u'"${BECH32_PREFIX}"'"/' /root/.nymd/config/app.toml
    sed -i '0,/enable = false/s//enable = true/g' /root/.nymd/config/app.toml
    sed -i 's/cors_allowed_origins = \[\]/cors_allowed_origins = \["*"\]/' /root/.nymd/config/config.toml
    sed -i 's/create_empty_blocks = true/create_empty_blocks = false/' /root/.nymd/config/config.toml
    sed -i 's/laddr = "tcp:\/\/127.0.0.1:26657"/laddr = "tcp:\/\/0.0.0.0:26657"/' /root/.nymd/config/config.toml

#    import mnemonic generated by the genesis validator (have a local copy for ease of use)
    cp  /genesis_volume/secondary_mnemonic /root/.nymd/mnemonic
    { cat /root/.nymd/mnemonic; echo "${PASSPHRASE}"; echo "${PASSPHRASE}"; } | ./nymd keys add node_admin --recover #> /dev/null
    ./nymd validate-genesis > /dev/null

#    create validator
#  don't even ask about those sleeps...
  { echo "${PASSPHRASE}"; sleep 10; yes; sleep 10; } | ./nymd tx staking create-validator --amount=10000000u"${STAKE_DENOM}" --fees 100000u"${DENOM}" --pubkey="$(./nymd tendermint show-validator)" --moniker="secondary" --commission-rate="0.10" --commission-max-rate="0.20" --commission-max-change-rate="0.01" --min-self-delegation="1" --chain-id=nymnet --from=node_admin -b async --node http://"${GENESIS_IP}":26657
  else
    echo "Validator already initialized, starting with the existing configuration."
    echo "If you want to re-init the validator, destroy the existing container"
  fi
	./nymd start
else
	echo "Wrong command. Usage: ./$0 [genesis/secondary]"
fi
