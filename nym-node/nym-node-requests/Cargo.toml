[package]
name = "nym-node-requests"
version = "0.1.0"
authors.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
base64 = { workspace = true }
celes = { workspace = true } # country codes
humantime = { workspace = true }
humantime-serde = { workspace = true }
schemars = { workspace = true, features = ["preserve_order"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
time = { workspace = true, features = ["serde", "formatting", "parsing"] }
thiserror = { workspace = true }

nym-crypto = { path = "../../common/crypto", features = ["asymmetric", "serde"] }
nym-exit-policy = { path = "../../common/exit-policy" }
nym-wireguard-types = { path = "../../common/wireguard-types", default-features = false }

# feature-specific dependencies:

## client:
async-trait = { workspace = true, optional = true }
nym-http-api-client = { path = "../../common/http-api-client", optional = true }

## openapi:
utoipa = { workspace = true, optional = true }
nym-bin-common = { path = "../../common/bin-common", features = ["bin_info_schema"] }

[dev-dependencies]
tokio = { workspace = true, features = ["full"] }
rand_chacha = { workspace = true }
nym-crypto = { path = "../../common/crypto", features = ["rand"] }


[features]
default = ["client"]
client = ["nym-http-api-client", "async-trait"]
openapi = ["utoipa", "nym-bin-common/openapi", "nym-wireguard-types/openapi", "nym-exit-policy/openapi"]
