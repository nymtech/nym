name: nightly-check-merge-conflicts

# Check that the latest release branch merges into master and develop without
# any conflicts that git is not able to resolve

on:
  workflow_dispatch:
  schedule:
    - cron: '5 6 * * *'

jobs:
  get_release:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step2.outputs.latest_release }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set output variable to latest release branch
        id: step2
        run: echo "latest_release=$(git branch -r | grep -E 'release/v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)" >> $GITHUB_OUTPUT

  check-merge-release-into-master:
    name: Check that the release branch merges into master
    needs: get_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup git user
        run: |
          git config --global user.name "ci"
          git config --global user.email "ci@localhost"
      - name: Check merge release branch into master
        run: |
          ./.github/workflows/support-files/git-merge-check.sh origin/master $branch1
        env:
          branch1: ${{needs.get_release.outputs.output1}}

  check-merge-release-into-develop:
    name: Check that the release branch merges into develop
    needs: get_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup git user
        run: |
          git config --global user.name "ci"
          git config --global user.email "ci@localhost"
      - name: Check merge release branch into develop
        run: |
          ./.github/workflows/support-files/git-merge-check.sh origin/develop $branch1
        env:
          branch1: ${{needs.get_release.outputs.output1}}
