name: ci-contracts-upload-binaries

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'common/**'
      - 'contracts/**'
      - '.github/workflows/ci-contracts-upload-binaries.yml'

env:
  NETWORK: mainnet

jobs:
  publish-nym-contracts:
    strategy:
      fail-fast: false
      matrix:
        platform: arc-ubuntu-20.04

    runs-on: ${{ matrix.platform }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4

      - name: Prepare build output directory
        shell: bash
        env:
          OUTPUT_DIR: ci-contract-builds/${{ github.ref_name }}
        run: |
          rm -rf ci-contract-builds || true
          mkdir -p $OUTPUT_DIR
          echo $OUTPUT_DIR

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.77
          target: wasm32-unknown-unknown
          override: true

      - name: Install wasm-opt
        uses: ./.github/actions/install-wasm-opt
        with:
          version: '114'

      - name: Build release contracts
        run: make contracts

      - name: Prepare build output
        shell: bash
        env:
          OUTPUT_DIR: ci-contract-builds/${{ github.ref_name }}
        run: |
          cp contracts/target/wasm32-unknown-unknown/release/mixnet_contract.wasm $OUTPUT_DIR
          cp contracts/target/wasm32-unknown-unknown/release/vesting_contract.wasm $OUTPUT_DIR
          cp contracts/target/wasm32-unknown-unknown/release/nym_coconut_bandwidth.wasm $OUTPUT_DIR
          cp contracts/target/wasm32-unknown-unknown/release/nym_coconut_dkg.wasm $OUTPUT_DIR
          cp contracts/target/wasm32-unknown-unknown/release/cw3_flex_multisig.wasm $OUTPUT_DIR
          cp contracts/target/wasm32-unknown-unknown/release/cw4_group.wasm $OUTPUT_DIR
          cp contracts/target/wasm32-unknown-unknown/release/nym_ecash.wasm $OUTPUT_DIR

      - name: Deploy branch to CI www
        continue-on-error: true
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.CI_WWW_SSH_PRIVATE_KEY }}
          ARGS: "-avzr"
          SOURCE: "ci-contract-builds/"
          REMOTE_HOST: ${{ secrets.CI_WWW_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.CI_WWW_REMOTE_USER }}
          TARGET: ${{ secrets.CI_WWW_REMOTE_TARGET }}/builds/
          EXCLUDE: "/dist/, /node_modules/"
