name: publish-nym-wallet-macos
on:
  workflow_dispatch:
  release:
    types: [created]

defaults:
  run:
    working-directory: nym-wallet

jobs:
  publish-tauri:
    if: ${{ (startsWith(github.ref, 'refs/tags/nym-wallet-') && github.event_name == 'release') || github.event_name == 'workflow_dispatch' }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-15]
    runs-on: ${{ matrix.platform }}

    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      release_date: ${{ fromJSON(steps.create-release.outputs.assets)[0].created_at }}
      version: ${{ steps.release-info.outputs.version }}
      filename: ${{ steps.release-info.outputs.filename }}
      file_hash: ${{ steps.release-info.outputs.file_hash }}

    steps:
      - uses: actions/checkout@v4

      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install Rust stable + targets
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          targets: x86_64-apple-darwin aarch64-apple-darwin

      - name: Install the Apple developer certificate for code signing
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          echo -n "$APPLE_CERTIFICATE" | base64 --decode --output $CERTIFICATE_PATH
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security import $CERTIFICATE_PATH -P "$APPLE_CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Create env file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: '.env'
          encodedString: ${{ secrets.WALLET_ADMIN_ADDRESS }}

      - name: Install project dependencies
        shell: bash
        run: cd .. && yarn --network-timeout 100000

      - name: Build for Apple Silicon (ARM64)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn tauri build --target aarch64-apple-darwin

      - name: Build for Intel (x86_64)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn tauri build --target x86_64-apple-darwin

      - name: Merge into universal app
        run: |
          mkdir -p universal-app/nym-wallet.app/Contents
          cp -R target/aarch64-apple-darwin/release/bundle/macos/nym-wallet.app/Contents/* universal-app/nym-wallet.app/Contents
          lipo -create \
            target/aarch64-apple-darwin/release/bundle/macos/nym-wallet.app/Contents/MacOS/nym-wallet \
            target/x86_64-apple-darwin/release/bundle/macos/nym-wallet.app/Contents/MacOS/nym-wallet \
            -output universal-app/nym-wallet.app/Contents/MacOS/nym-wallet

      - name: Check final binary architecture
        run: lipo -info universal-app/nym-wallet.app/Contents/MacOS/nym-wallet

      - name: Compress universal app
        run: |
          tar -czf nym-wallet-universal.app.tar.gz -C universal-app nym-wallet.app

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nym-wallet-universal.app.tar.gz
          path: nym-wallet-universal.app.tar.gz
          retention-days: 5

      - name: Clean up keychain
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db

      - id: create-release
        name: Upload to release based on tag name
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'release'
        with:
          files: nym-wallet-universal.app.tar.gz

      - name: Deploy artifacts to CI www
        continue-on-error: true
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.CI_WWW_SSH_PRIVATE_KEY }}
          ARGS: "-avzr"
          SOURCE: "nym-wallet-universal.app.tar.gz"
          REMOTE_HOST: ${{ secrets.CI_WWW_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.CI_WWW_REMOTE_USER }}
          TARGET: ${{ secrets.CI_WWW_REMOTE_TARGET }}/builds/${{ github.ref_name }}/nym-wallet
          EXCLUDE: "/dist/, /node_modules/"            

  push-release-data:
    if: ${{ (startsWith(github.ref, 'refs/tags/nym-wallet-') && github.event_name == 'release') || github.event_name == 'workflow_dispatch' }}
    uses: ./.github/workflows/release-calculate-hash.yml
    needs: publish-tauri
    with:
      release_tag: ${{ github.ref_name }}
    secrets: inherit
