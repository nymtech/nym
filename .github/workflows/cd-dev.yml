name: CD dev-portal

on:
  push:
    branches: master
    paths:
      - 'documentation/dev-portal/**'

jobs:
  build:
    runs-on: custom-runner-linux
    steps:
      - uses: actions/checkout@v3
      - name: Install rsync
        run: sudo apt-get install rsync
      - uses: rlespinasse/github-slug-action@v3.x
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install mdbook
        run: (test -x $HOME/.cargo/bin/mdbook || cargo install --vers "^0.4" mdbook)
      - name: Install mdbook plugins
        run: |
          cargo install --vers "^0.2.0" mdbook-variables && cargo install \
            --vers "^1.8.0" mdbook-admonish && cargo install --vers \
            "^0.1.2" mdbook-last-changed && cargo install --vers "^0.1.2" \
            mdbook-theme && cargo install --vers "^0.7.7" mdbook-linkcheck
      - name: Clean website
        run: cd documentation/dev-portal && mdbook clean
      - name: Build website
        run: cd documentation/dev-portal && mdbook build
      - name: Deploy branch master to dev
        continue-on-error: true
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.CD_WWW_SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "documentation/dev-portal/book/html/"
          REMOTE_HOST: ${{ secrets.CD_WWW_REMOTE_HOST_DEV }}
          REMOTE_USER: ${{ secrets.CD_WWW_REMOTE_USER }}
          TARGET: ${{ secrets.CD_WWW_REMOTE_TARGET_DEVP }}/
          EXCLUDE: "/dist/, /node_modules/"
      - name: Deploy branch master to prod
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.CD_WWW_SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "documentation/dev-portal/book/html/"
          REMOTE_HOST: ${{ secrets.CD_WWW_REMOTE_HOST_PROD }}
          REMOTE_USER: ${{ secrets.CD_WWW_REMOTE_USER }}
          TARGET: ${{ secrets.CD_WWW_REMOTE_TARGET_DEVP }}/
          EXCLUDE: "/dist/, /node_modules/"
      - name: Matrix - Node Install
        run: npm install
        working-directory: .github/workflows/support-files
      - name: Matrix - Send Notification
        env:
          NYM_NOTIFICATION_KIND: cd-dev
          NYM_PROJECT_NAME: "Dev portal CD"
          NYM_CI_WWW_BASE: "${{ secrets.NYM_CD_WWW_BASE }}"
          NYM_CI_WWW_LOCATION: "${{ env.GITHUB_REF_SLUG }}"
          GIT_COMMIT_MESSAGE: "${{ github.event.head_commit.message }}"
          GIT_BRANCH: "${GITHUB_REF##*/}"
          MATRIX_SERVER: "${{ secrets.MATRIX_SERVER }}"
          MATRIX_ROOM: "${{ secrets.MATRIX_ROOM_DEVP }}"
          MATRIX_USER_ID: "${{ secrets.MATRIX_USER_ID }}"
          MATRIX_TOKEN: "${{ secrets.MATRIX_TOKEN }}"
          MATRIX_DEVICE_ID: "${{ secrets.MATRIX_DEVICE_ID }}"
          IS_SUCCESS: "${{ job.status == 'success' }}"
        uses: docker://keybaseio/client:stable-node
        with:
          args: .github/workflows/support-files/notifications/entry_point.sh
