/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.13.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  group_addr: string;
  key_size: number;
  mix_denom: string;
  multisig_addr: string;
  time_configuration?: TimeConfiguration | null;
}
export interface TimeConfiguration {
  dealing_exchange_time_secs: number;
  in_progress_time_secs: number;
  public_key_submission_time_secs: number;
  verification_key_finalization_time_secs: number;
  verification_key_submission_time_secs: number;
  verification_key_validation_time_secs: number;
}
export type ExecuteMsg = {
  initiate_dkg: {};
} | {
  register_dealer: {
    announce_address: string;
    bte_key_with_proof: string;
    identity_key: string;
    resharing: boolean;
  };
} | {
  commit_dealings_metadata: {
    chunks: DealingChunkInfo[];
    dealing_index: number;
    resharing: boolean;
  };
} | {
  commit_dealings_chunk: {
    chunk: PartialContractDealing;
  };
} | {
  commit_verification_key_share: {
    resharing: boolean;
    share: string;
  };
} | {
  verify_verification_key_share: {
    owner: string;
    resharing: boolean;
  };
} | {
  advance_epoch_state: {};
} | {
  trigger_reset: {};
} | {
  trigger_resharing: {};
} | {
  transfer_ownership: {
    transfer_to: string;
  };
} | {
  update_announce_address: {
    new_address: string;
  };
};
export type ContractSafeBytes = number[];
export interface DealingChunkInfo {
  size: number;
}
export interface PartialContractDealing {
  chunk_index: number;
  data: ContractSafeBytes;
  dealing_index: number;
}
export type QueryMsg = {
  get_state: {};
} | {
  get_current_epoch_state: {};
} | {
  get_epoch_state_at_height: {
    height: number;
  };
} | {
  get_current_epoch_threshold: {};
} | {
  get_epoch_threshold: {
    epoch_id: number;
  };
} | {
  can_advance_state: {};
} | {
  get_registered_dealer: {
    dealer_address: string;
    epoch_id?: number | null;
  };
} | {
  get_dealer_details: {
    dealer_address: string;
  };
} | {
  get_epoch_dealers_addresses: {
    epoch_id: number;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  get_epoch_dealers: {
    epoch_id: number;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  get_current_dealers: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  get_dealer_indices: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  get_dealings_metadata: {
    dealer: string;
    dealing_index: number;
    epoch_id: number;
  };
} | {
  get_dealer_dealings_status: {
    dealer: string;
    epoch_id: number;
  };
} | {
  get_dealing_status: {
    dealer: string;
    dealing_index: number;
    epoch_id: number;
  };
} | {
  get_dealing_chunk_status: {
    chunk_index: number;
    dealer: string;
    dealing_index: number;
    epoch_id: number;
  };
} | {
  get_dealing_chunk: {
    chunk_index: number;
    dealer: string;
    dealing_index: number;
    epoch_id: number;
  };
} | {
  get_verification_key: {
    epoch_id: number;
    owner: string;
  };
} | {
  get_verification_keys: {
    epoch_id: number;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  get_cw2_contract_version: {};
};
export interface MigrateMsg {}
export type EpochState = ("waiting_initialisation" | "in_progress") | {
  public_key_submission: {
    resharing: boolean;
  };
} | {
  dealing_exchange: {
    resharing: boolean;
  };
} | {
  verification_key_submission: {
    resharing: boolean;
  };
} | {
  verification_key_validation: {
    resharing: boolean;
  };
} | {
  verification_key_finalization: {
    resharing: boolean;
  };
};
export type Timestamp = Uint64;
export type Uint64 = number;
export interface StateAdvanceResponse {
  current_state: EpochState;
  deadline?: Timestamp | null;
  is_complete: boolean;
  progress: StateProgress;
  reached_deadline: boolean;
}
export interface StateProgress {
  registered_dealers: number;
  registered_resharing_dealers: number;
  submitted_dealings: number;
  submitted_key_shares: number;
  verified_keys: number;
}
export interface ContractVersion {
  contract: string;
  version: string;
}
export type Addr = string;
export interface PagedDealerResponse {
  dealers: DealerDetails[];
  per_page: number;
  start_next_after?: Addr | null;
}
export interface DealerDetails {
  address: Addr;
  announce_address: string;
  assigned_index: number;
  bte_public_key_with_proof: string;
  ed25519_identity: string;
}
export interface Epoch {
  deadline?: Timestamp | null;
  epoch_id: number;
  state: EpochState;
  state_progress: StateProgress;
  time_configuration: TimeConfiguration;
}
export interface DealerDealingsStatusResponse {
  all_dealings_fully_submitted: boolean;
  dealer: Addr;
  dealing_submission_status: {};
  epoch_id: number;
}
export type DealerType = "unknown" | {
  current: {
    assigned_index: number;
  };
} | {
  past: {
    assigned_index: number;
  };
};
export interface DealerDetailsResponse {
  dealer_type: DealerType;
  details?: DealerDetails | null;
}
export interface PagedDealerIndexResponse {
  indices: [Addr, number][];
  start_next_after?: Addr | null;
}
export interface DealingChunkResponse {
  chunk?: ContractSafeBytes | null;
  chunk_index: number;
  dealer: Addr;
  dealing_index: number;
  epoch_id: number;
}
export interface DealingChunkStatusResponse {
  chunk_index: number;
  dealer: Addr;
  dealing_index: number;
  epoch_id: number;
  status: ChunkSubmissionStatus;
}
export interface ChunkSubmissionStatus {
  submission_height?: number | null;
}
export interface DealingStatusResponse {
  dealer: Addr;
  dealing_index: number;
  epoch_id: number;
  status: DealingStatus;
}
export interface DealingStatus {
  chunk_submission_status: {};
  fully_submitted: boolean;
  has_metadata: boolean;
}
export interface DealingMetadataResponse {
  dealer: Addr;
  dealing_index: number;
  epoch_id: number;
  metadata?: DealingMetadata | null;
}
export interface DealingMetadata {
  dealing_index: number;
  submitted_chunks: {};
}
export interface PagedDealerAddressesResponse {
  dealers: Addr[];
  start_next_after?: Addr | null;
}
export type NullableEpoch = Epoch | null;
export interface RegisteredDealerDetails {
  details?: DealerRegistrationDetails | null;
}
export interface DealerRegistrationDetails {
  announce_address: string;
  bte_public_key_with_proof: string;
  ed25519_identity: string;
}
export type Cw4Contract = Addr;
export interface State {
  group_addr: Cw4Contract;
  key_size: number;
  mix_denom: string;
  multisig_addr: Addr;
}
export interface VkShareResponse {
  epoch_id: number;
  owner: Addr;
  share?: ContractVKShare | null;
}
export interface ContractVKShare {
  announce_address: string;
  epoch_id: number;
  node_index: number;
  owner: Addr;
  share: string;
  verified: boolean;
}
export interface PagedVKSharesResponse {
  per_page: number;
  shares: ContractVKShare[];
  start_next_after?: Addr | null;
}