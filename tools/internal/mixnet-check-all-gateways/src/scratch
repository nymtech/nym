
        // let echo = mixnet::MixnetClientBuilder::new_ephemeral()
        //     .request_gateway(gw)
        //     .build()?;
        // let mut client = echo.connect_to_mixnet().await?;
        // let echo_addr = client.nym_address().clone();

        // tokio::task::spawn(async move {
        //     loop {
        //         println!("Waiting for message\n");
        //         let mut message: Vec<ReconstructedMessage> = Vec::new();
        //         while let Some(new_message) = client.wait_for_messages().await {
        //             if new_message.is_empty() {
        //                 continue;
        //             }
        //             message = new_message;
        //             break;
        //         }

        //         let mut parsed = String::new();
        //         if let Some(r) = message.first() {
        //             parsed = String::from_utf8(r.message.clone()).unwrap();
        //         }
        //         let return_recipient: AnonymousSenderTag = message[0].sender_tag.unwrap();
        //         println!("\nReceived: {} from {}", parsed, return_recipient);

        //         println!("Replying using SURBs");
        //         client
        //             .send_reply(return_recipient, parsed.to_string())
        //             .await
        //             .unwrap();

        //         tokio::time::sleep(tokio::time::Duration::from_secs(1)).await;
        //     }
        // });
