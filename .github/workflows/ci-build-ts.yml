name: ci-build-ts

on:
  pull_request:
    paths:
      - "ts-packages/**"
      - "sdk/typescript/**"

jobs:
  build:
    runs-on: ubuntu-20.04-16-core
    steps:
    - uses: actions/checkout@v4
    - name: Install rsync
      run: sudo apt-get install rsync
      continue-on-error: true
    - uses: rlespinasse/github-slug-action@v3.x
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Setup yarn
      run: npm install -g yarn
    - name: Build
      run: yarn && yarn build && yarn build:ci:storybook
    - name: Deploy branch to CI www (storybook)
      continue-on-error: true
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.CI_WWW_SSH_PRIVATE_KEY }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "ts-packages/dist/storybook/"
        REMOTE_HOST: ${{ secrets.CI_WWW_REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.CI_WWW_REMOTE_USER }}
        TARGET: ${{ secrets.CI_WWW_REMOTE_TARGET }}/ts-${{ env.GITHUB_REF_SLUG }}
        EXCLUDE: "/dist/, /node_modules/"
    - name: Deploy branch to CI www (example)
      continue-on-error: true
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.CI_WWW_SSH_PRIVATE_KEY }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "ts-packages/dist/example/"
        REMOTE_HOST: ${{ secrets.CI_WWW_REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.CI_WWW_REMOTE_USER }}
        TARGET: ${{ secrets.CI_WWW_REMOTE_TARGET }}/ts-${{ env.GITHUB_REF_SLUG }}-example
        EXCLUDE: "/dist/, /node_modules/"
    - name: Matrix - Node Install
      run: npm install
      working-directory: .github/workflows/support-files
    - name: Matrix - Send Notification
      env:
        NYM_NOTIFICATION_KIND: ts-packages
        NYM_PROJECT_NAME: "ts-packages"
        NYM_CI_WWW_BASE: "${{ secrets.NYM_CI_WWW_BASE }}"
        NYM_CI_WWW_LOCATION: "ts-${{ env.GITHUB_REF_SLUG }}"
        GIT_COMMIT_MESSAGE: "${{ github.event.head_commit.message }}"
        GIT_BRANCH: "${GITHUB_REF##*/}"
        IS_SUCCESS: "${{ job.status == 'success' }}"
        MATRIX_SERVER: "${{ secrets.MATRIX_SERVER }}"
        MATRIX_ROOM: "${{ secrets.MATRIX_ROOM }}"
        MATRIX_USER_ID: "${{ secrets.MATRIX_USER_ID }}"
        MATRIX_TOKEN: "${{ secrets.MATRIX_TOKEN }}"
        MATRIX_DEVICE_ID: "${{ secrets.MATRIX_DEVICE_ID }}"
      uses: docker://keybaseio/client:stable-node
      with:
        args: .github/workflows/support-files/notifications/entry_point.sh
