/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export interface InstantiateMsg {
  deposit_required: Coin;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  register: {
    name: NameDetails;
    owner_signature: MessageSignature;
  };
} | {
  delete_id: {
    name_id: number;
  };
} | {
  delete_name: {
    name: NymName;
  };
} | {
  update_deposit_required: {
    deposit_required: Coin;
  };
};
export type Address = {
  nym_address: NymAddressInner;
};
export type NymName = string;
export type MessageSignature = number[];
export interface NameDetails {
  address: Address;
  identity_key: string;
  name: NymName;
}
export interface NymAddressInner {
  client_enc: string;
  client_id: string;
  gateway_id: string;
}
export type QueryMsg = {
  name_id: {
    name_id: number;
  };
} | {
  by_owner: {
    owner: string;
  };
} | {
  by_name: {
    name: NymName;
  };
} | {
  by_address: {
    address: Address;
  };
} | {
  all: {
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  signing_nonce: {
    address: string;
  };
} | {
  config: {};
} | {
  get_contract_version: {};
} | {
  get_cw2_contract_version: {};
};
export interface MigrateMsg {}
export type Addr = string;
export interface PagedNamesListResponse {
  names: RegisteredName[];
  per_page: number;
  start_next_after?: number | null;
}
export interface RegisteredName {
  block_height: number;
  deposit: Coin;
  id: number;
  name: NameDetails;
  owner: Addr;
}
export interface NamesListResponse {
  names: RegisteredName[];
}
export interface ConfigResponse {
  deposit_required: Coin;
}
export interface ContractVersion {
  contract: string;
  version: string;
}
export interface ContractBuildInformation {
  build_timestamp: string;
  build_version: string;
  commit_branch: string;
  commit_sha: string;
  commit_timestamp: string;
  rustc_version: string;
}
export type Uint32 = number;