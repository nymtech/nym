{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "get_mix_nodes"
      ],
      "properties": {
        "get_mix_nodes": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_gateways"
      ],
      "properties": {
        "get_gateways": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "owns_mixnode"
      ],
      "properties": {
        "owns_mixnode": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "owns_gateway"
      ],
      "properties": {
        "owns_gateway": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "contract_settings_params"
      ],
      "properties": {
        "contract_settings_params": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_mix_delegations"
      ],
      "properties": {
        "get_mix_delegations": {
          "type": "object",
          "required": [
            "mix_identity"
          ],
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "mix_identity": {
              "type": "string"
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Addr"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_reverse_mix_delegations"
      ],
      "properties": {
        "get_reverse_mix_delegations": {
          "type": "object",
          "required": [
            "delegation_owner"
          ],
          "properties": {
            "delegation_owner": {
              "$ref": "#/definitions/Addr"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_mix_delegation"
      ],
      "properties": {
        "get_mix_delegation": {
          "type": "object",
          "required": [
            "address",
            "mix_identity"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "mix_identity": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_gateway_delegations"
      ],
      "properties": {
        "get_gateway_delegations": {
          "type": "object",
          "required": [
            "gateway_identity"
          ],
          "properties": {
            "gateway_identity": {
              "type": "string"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Addr"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_reverse_gateway_delegations"
      ],
      "properties": {
        "get_reverse_gateway_delegations": {
          "type": "object",
          "required": [
            "delegation_owner"
          ],
          "properties": {
            "delegation_owner": {
              "$ref": "#/definitions/Addr"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_gateway_delegation"
      ],
      "properties": {
        "get_gateway_delegation": {
          "type": "object",
          "required": [
            "address",
            "gateway_identity"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "gateway_identity": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "layer_distribution"
      ],
      "properties": {
        "layer_distribution": {
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    }
  }
}