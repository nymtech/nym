[package]
name = "nym-credential-proxy-requests"
version = "0.1.0"
authors.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
async-trait = { workspace = true }
schemars = { workspace = true, features = ["preserve_order", "uuid1"] }
uuid = { workspace = true, features = ["serde"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
time = { workspace = true, features = ["serde", "formatting", "parsing"] }
tsify = { workspace = true, optional = true }
reqwest = { workspace = true, features = ["json", "rustls-tls"] }
wasm-bindgen = { workspace = true, optional = true }

## openapi:
utoipa = { workspace = true, optional = true, features = ["uuid"] }

nym-credentials = { path = "../../common/credentials" }
nym-credentials-interface = { path = "../../common/credentials-interface" }
nym-http-api-common = { path = "../../common/http-api-common", optional = true }
nym-http-api-client = { path = "../../common/http-api-client" }
nym-serde-helpers = { path = "../../common/serde-helpers", features = ["bs58"] }

[target."cfg(target_arch = \"wasm32\")".dependencies.wasmtimer]
workspace = true
features = ["tokio"]


[features]
default = ["query-types"]
query-types = ["nym-http-api-common"]
openapi = ["utoipa"]
tsify = ["dep:tsify", "wasm-bindgen"]
