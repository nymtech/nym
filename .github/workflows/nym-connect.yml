name: CI for nym-connect

on:
  push:
    paths:
      - 'nym-connect/**'

defaults:
  run:
    working-directory: nym-connect

jobs:
  build:
    runs-on: custom-runner-linux
    steps:
    - uses: actions/checkout@v2
    - name: Install rsync
      run: sudo apt-get install rsync
    - uses: rlespinasse/github-slug-action@v3.x
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install Yarn
      run: npm install -g yarn
    - run: yarn
      continue-on-error: true
    - name: Set environment from the example
      run: cp .env.sample .env
    - run: yarn storybook:build
    - name: Deploy branch to CI www
      continue-on-error: true
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.CI_WWW_SSH_PRIVATE_KEY }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "nym-connect/storybook-static/"
        REMOTE_HOST: ${{ secrets.CI_WWW_REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.CI_WWW_REMOTE_USER }}
        TARGET: ${{ secrets.CI_WWW_REMOTE_TARGET }}/nym-connect-${{ env.GITHUB_REF_SLUG }}
        EXCLUDE: "/dist/, /node_modules/"
    - name: Keybase - Node Install
      run: npm install
      working-directory: .github/workflows/support-files
#    - name: Keybase - Send Notification
#      env:
#        NYM_NOTIFICATION_KIND: nym-connect
#        NYM_PROJECT_NAME: "nym-connect"
#        NYM_CI_WWW_BASE: "${{ secrets.NYM_CI_WWW_BASE }}"
#        NYM_CI_WWW_LOCATION: "nym-connect-${{ env.GITHUB_REF_SLUG }}"
#        GIT_COMMIT_MESSAGE: "${{ github.event.head_commit.message }}"
#        GIT_BRANCH: "${GITHUB_REF##*/}"
#        KEYBASE_NYMBOT_USERNAME: "${{ secrets.KEYBASE_NYMBOT_USERNAME }}"
#        KEYBASE_NYMBOT_PAPERKEY: "${{ secrets.KEYBASE_NYMBOT_PAPERKEY }}"
#        KEYBASE_NYMBOT_TEAM: "${{ secrets.KEYBASE_NYMBOT_TEAM }}"
#        KEYBASE_NYM_CHANNEL: "ci-nym-connect"
#        IS_SUCCESS: "${{ job.status == 'success' }}"
#      uses: docker://keybaseio/client:stable-node
#      with:
#        args: .github/workflows/support-files/notifications/entry_point.sh
