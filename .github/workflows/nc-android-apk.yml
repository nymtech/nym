name: NC Android APK Release

on:
  workflow_dispatch:
  push:
    branches:
      - "release/nc-android-v[0-9].[0-9].[0-9]*"

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: ./android-sdk
      NDK_VERSION: 25.1.8937393
      NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/${{ env.NDK_VERSION }}
      SDK_PLATFORM_VERSION: android-33
      SDK_BUILDTOOLS_VERSION: 33.0.1

    steps:
      - name: Install Dependencies (Linux)
        # if: ${{ !env.ACT }}
        # https://next--tauri.netlify.app/next/guides/getting-started/prerequisites/linux/#1-system-dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install \
          libwebkit2gtk-4.0-dev \
          build-essential \
          curl \
          wget \
          libssl-dev \
          libgtk-3-dev \
          squashfs-tools \
          libayatana-appindicator3-dev \
          librsvg2-dev

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Install Android SDK manager
        # https://developer.android.com/studio/command-line/sdkmanager
        run: |
          curl -sS https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o cmdline-tools.zip
          unzip cmdline-tools.zip
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest
          rm -rf cmdline-tools

      - name: Install Android S/NDK
        run: |
          echo y | ./$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          echo y | ./$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platforms;$SDK_PLATFORM_VERSION" \
            "platform-tools" \
            "ndk;$NDK_VERSION" \
            "build-tools;$SDK_BUILDTOOLS_VERSION"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - name: Install tauri cli
        run: cargo install tauri-cli --version "^2.0.0-alpha"

      - name: Install rust android targets
        run: |
          rustup target add aarch64-linux-android \
            armv7-linux-androideabi \
            i686-linux-android \
            x86_64-linux-android

      # - name: Run tests
      #   working-directory: nym-connect-android/src-tauri/
      #   run: cargo test

      # - name: Clippy
      #   working-directory: nym-connect-android/src-tauri/
      #   run: cargo clippy --all-targets -- -D warnings

      - name: Build APK
        working-directory: nym-connect-android/src-tauri/
        env:
          WRY_ANDROID_PACKAGE: net.nymtech.nym_connect_android
          WRY_ANDROID_LIBRARY: nym_connect_android
        run: cargo tauri android build --debug --apk

      - name: Rename APK artifact
        run: |
          mv nym-connect-android/src-tauri/gen/android/nym-connect-android/app/build/outputs/apk/universal/debug/app-universal-debug.apk \
            nym-connect-debug.apk
          ls -la

      # - name: Upload APK artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: nc-apk-debug
      #     path: ./nym-connect-android/src-tauri/nym-connect-debug.apk

  # gh-release:
  #   name: Publish Github Release
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Download binary artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: nc-apk-debug
  #         path: ./target/release/
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: target/release/apekey
