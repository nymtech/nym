{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "description": "Used by clients to request ticket books from the signers",
      "type": "object",
      "required": [
        "deposit_ticket_book_funds"
      ],
      "properties": {
        "deposit_ticket_book_funds": {
          "type": "object",
          "required": [
            "identity_key"
          ],
          "properties": {
            "identity_key": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Used by gateways to batch redeem tokens from the spent tickets",
      "type": "object",
      "required": [
        "request_redemption"
      ],
      "properties": {
        "request_redemption": {
          "type": "object",
          "required": [
            "commitment_bs58",
            "number_of_tickets"
          ],
          "properties": {
            "commitment_bs58": {
              "type": "string"
            },
            "number_of_tickets": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "The actual message that gets executed, after multisig votes, that transfers the ticket tokens into gateway's (and the holding) account",
      "type": "object",
      "required": [
        "redeem_tickets"
      ],
      "properties": {
        "redeem_tickets": {
          "type": "object",
          "required": [
            "gw",
            "n"
          ],
          "properties": {
            "gw": {
              "type": "string"
            },
            "n": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_admin"
      ],
      "properties": {
        "update_admin": {
          "type": "object",
          "required": [
            "admin"
          ],
          "properties": {
            "admin": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_deposit_value"
      ],
      "properties": {
        "update_deposit_value": {
          "type": "object",
          "required": [
            "new_deposit"
          ],
          "properties": {
            "new_deposit": {
              "$ref": "#/definitions/Coin"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "propose_to_blacklist"
      ],
      "properties": {
        "propose_to_blacklist": {
          "type": "object",
          "required": [
            "public_key"
          ],
          "properties": {
            "public_key": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_to_blacklist"
      ],
      "properties": {
        "add_to_blacklist": {
          "type": "object",
          "required": [
            "public_key"
          ],
          "properties": {
            "public_key": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
