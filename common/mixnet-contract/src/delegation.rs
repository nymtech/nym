// due to code generated by JsonSchema
#![allow(clippy::field_reassign_with_default)]

use cosmwasm_std::{Coin, HumanAddr};
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
use std::fmt::Display;

#[derive(Clone, Debug, Deserialize, PartialEq, Serialize, JsonSchema)]
pub struct Delegation {
    owner: HumanAddr,
    amount: Coin,
}

impl Delegation {
    pub fn new(owner: HumanAddr, amount: Coin) -> Self {
        Delegation { owner, amount }
    }

    pub fn amount(&self) -> &Coin {
        &self.amount
    }

    pub fn owner(&self) -> &HumanAddr {
        &self.owner
    }
}

impl Display for Delegation {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        write!(
            f,
            "{} {} delegated by {}",
            self.amount.amount, self.amount.denom, self.owner
        )
    }
}

#[derive(Clone, Debug, Deserialize, PartialEq, Serialize, JsonSchema)]
pub struct PagedMixDelegationsResponse {
    pub node_owner: HumanAddr,
    pub delegations: Vec<Delegation>,
    pub start_next_after: Option<HumanAddr>,
}

impl PagedMixDelegationsResponse {
    pub fn new(
        node_owner: HumanAddr,
        delegations: Vec<Delegation>,
        start_next_after: Option<HumanAddr>,
    ) -> Self {
        PagedMixDelegationsResponse {
            node_owner,
            delegations,
            start_next_after,
        }
    }
}

#[derive(Clone, Debug, Deserialize, PartialEq, Serialize, JsonSchema)]
pub struct PagedGatewayDelegationsResponse {
    pub node_owner: HumanAddr,
    pub delegations: Vec<Delegation>,
    pub start_next_after: Option<HumanAddr>,
}

impl PagedGatewayDelegationsResponse {
    pub fn new(
        node_owner: HumanAddr,
        delegations: Vec<Delegation>,
        start_next_after: Option<HumanAddr>,
    ) -> Self {
        PagedGatewayDelegationsResponse {
            node_owner,
            delegations,
            start_next_after,
        }
    }
}
