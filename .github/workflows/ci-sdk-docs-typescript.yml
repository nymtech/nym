name: ci-sdk-docs-typescript

on:
  pull_request:
    paths:
      - "sdk/typescript/**"
      - "wasm/**"

jobs:
  build:
    runs-on: custom-linux
    steps:
      - uses: actions/checkout@v4
      - name: Install rsync
        run: sudo apt-get install rsync
        continue-on-error: true
      - uses: rlespinasse/github-slug-action@v3.x
      - uses: actions/setup-node@v4
        with:
          node-version: 18.17
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup yarn
        run: npm install -g yarn

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install wasm-opt
        uses: ./.github/actions/install-wasm-opt
        with:
          version: '116'

      - name: Build branch WASM packages
        run: make sdk-wasm-build

      - name: Install
        run: yarn
      - name: Build
        run: yarn docs:prod:build
      - name: Deploy branch to CI www (docs)
        continue-on-error: true
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.CI_WWW_SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/ts/"
          REMOTE_HOST: ${{ secrets.CI_WWW_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.CI_WWW_REMOTE_USER }}
          TARGET: ${{ secrets.CI_WWW_REMOTE_TARGET }}/sdk-ts-docs-${{ env.GITHUB_REF_SLUG }}
          EXCLUDE: "/dist/, /node_modules/"
      - name: Matrix - Node Install
        run: npm install
        working-directory: .github/workflows/support-files
      - name: Matrix - Send Notification
        env:
          NYM_NOTIFICATION_KIND: ts-packages
          NYM_PROJECT_NAME: "sdk-ts-docs"
          NYM_CI_WWW_BASE: "${{ secrets.NYM_CI_WWW_BASE }}/docs/sdk/typescript"
          NYM_CI_WWW_LOCATION: "sdk-ts-docs-${{ env.GITHUB_REF_SLUG }}"
          GIT_COMMIT_MESSAGE: "${{ github.event.head_commit.message }}"
          GIT_BRANCH: "${GITHUB_REF##*/}"
          IS_SUCCESS: "${{ job.status == 'success' }}"
          MATRIX_SERVER: "${{ secrets.MATRIX_SERVER }}"
          MATRIX_ROOM: "${{ secrets.MATRIX_ROOM }}"
          MATRIX_USER_ID: "${{ secrets.MATRIX_USER_ID }}"
          MATRIX_TOKEN: "${{ secrets.MATRIX_TOKEN }}"
          MATRIX_DEVICE_ID: "${{ secrets.MATRIX_DEVICE_ID }}"
        uses: docker://keybaseio/client:stable-node
        with:
          args: .github/workflows/support-files/notifications/entry_point.sh
