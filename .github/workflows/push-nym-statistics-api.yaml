name: Build and upload Nym Statistics API container to harbor.nymte.ch
on:
  workflow_dispatch:

env:
  WORKING_DIRECTORY: "nym-statistics-api"
  CONTAINER_NAME: "nym-statistics-api"

jobs:
  build-container:
    runs-on: arc-ubuntu-22.04-dind
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.nymte.ch
          username: ${{ secrets.HARBOR_ROBOT_USERNAME }}
          password: ${{ secrets.HARBOR_ROBOT_SECRET }}

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure git identity
        run: |
          git config --global user.email "lawrence@nymtech.net"
          git config --global user.name "Lawrence Stalder"

      - name: Get version from cargo.toml
        uses: mikefarah/yq@v4.45.4
        id: get_version
        with:
          cmd: yq -oy '.package.version' ${{ env.WORKING_DIRECTORY }}/Cargo.toml

      - name: Check if git tag exists
        run: |
          TAG=${{ env.WORKING_DIRECTORY }}-${{ steps.get_version.outputs.result }}
          if [[ -z "$TAG" ]]; then
            echo "Tag is empty"
            exit 1
          fi
          git ls-remote --tags origin | awk '{print $2}'
          if git ls-remote --tags origin | awk '{print $2}' | grep -q "refs/tags/$TAG$" ; then
              echo "Tag '$TAG' ALREADY EXISTS on the remote"
              exit 1
          else
              echo "Tag '$TAG' does not exist on the remote"
          fi
      - name: Check if harbor tag exists
        run: |
          TAG=${{ steps.get_version.outputs.result }}
          registry=https://harbor.nymte.ch
          repo_name=nym/nym-statistics-api
          if [[ -z $TAG ]]; then
            echo "Tag is empty"
            exit 1
          fi
          curl -su ${{ secrets.HARBOR_ROBOT_USERNAME }}:${{ secrets.HARBOR_ROBOT_SECRET }} "$registry/v2/$repo_name/tags/list" | jq
          exists=$(curl -su ${{ secrets.HARBOR_ROBOT_USERNAME }}:${{ secrets.HARBOR_ROBOT_SECRET }} "$registry/v2/$repo_name/tags/list" | jq --arg tag $TAG '.tags | contains([$tag])' )
          if [[ $exists = "true" ]]; then
            echo "Version '$TAG' defined in Cargo.toml ALREADY EXISTS as tag in harbor repo"
            exit 1
          elif [[ $exists = "false" ]]; then
            echo "Version '$TAG' doesn't exist on the remote"
          else
            echo "Unknown output '$exists'"
            exit 1
          fi

      - name: Create tag
        run: |
          git tag -a ${{ env.WORKING_DIRECTORY }}-${{ steps.get_version.outputs.result }} -m "Version ${{ steps.get_version.outputs.result }}"
          git push origin ${{ env.WORKING_DIRECTORY }}-${{ steps.get_version.outputs.result }}

      - name: BuildAndPushImageOnHarbor
        run: |
          docker build -f ${{ env.WORKING_DIRECTORY }}/Dockerfile . -t harbor.nymte.ch/nym/${{ env.CONTAINER_NAME }}:${{ steps.get_version.outputs.result }} -t harbor.nymte.ch/nym/${{ env.CONTAINER_NAME }}:latest
          docker push harbor.nymte.ch/nym/${{ env.CONTAINER_NAME }} --all-tags
